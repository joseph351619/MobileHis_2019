@using X.PagedList;
@using X.PagedList.Mvc;
@using Common;
@model MobileHis.Models.Areas.Sys.ViewModels.CodeFileViewModel
@{
    ViewBag.Title = @LocalRes.Resource.Map_Category;
    Layout = "~/Areas/Settings/Views/Shared/_SettingLayout.cshtml";
}
@section header{
    @LocalRes.Resource.Map_Category
}
@section CategoryDropDownList{
    <label class="control-label">@LocalRes.Resource.CodeFile_ItemType:</label>
    @Html.DropDownListFor(a => a.ItemType, Model.ItemTypes, new { @class = "form-control" })
}
@section CreateModal{
    <div style="margin-bottom: 5px;margin-left:15px;" class="input-group">
        <label>@LocalRes.Resource.CodeFile_ItemType:</label><br />
        @Html.DropDownList("add_itemType", Model.AddItemType)
        <br /><br />
        <label>Parent Cat</label><br />
        @Html.DropDownList("add_parentType", Model.AddParentType) ->
        <select id="add_parentId"></select>
        <br /><br />
        <label>@LocalRes.Resource.CodeFile_ItemCode:</label><br />
        @Html.TextBox("add_itemCode", "", new { @class = "input-sm addInputs", size = "10", maxlength = "8" })
        <br /><br />
        <label>@LocalRes.Resource.CodeFile_ItemDesc:</label><br />
        @Html.TextBox("add_itemDesc", "", new { @class = "input-large addInputs", maxlength = "50" })
        <br /><br />
        <label>@LocalRes.Resource.CodeFile_Remark:</label><br />
        @Html.TextBox("add_itemRemark", "", new { @class = "input-large addInputs", maxlength = "50" })
    </div>
}
@section UpdateModal{
    <div style="margin-bottom: 5px;margin-left:15px;" class="input-group">
        <input type="hidden" id="upd_ID" />
        <label>Parent Cat</label><br />
        @Html.DropDownList("upd_parentType", Model.UDPParentType) ->
        <select id="upd_parentId"></select>
        <br /><br />
        <label>@LocalRes.Resource.CodeFile_ItemDesc:</label><br />
        @Html.TextBox("upd_itemDesc", "", new { @class = "input-large", maxlength = "50" })
        <br /><br />
        <label>@LocalRes.Resource.CodeFile_Remark:</label><br />
        @Html.TextBox("upd_itemRemark", "", new { @class = "input-large", maxlength = "50" })
    </div>
}
@section Table{
    <table id="sample-table-1" class="table table-striped table-responsive table-bordered table-hover alert alert-info">
        <thead>
            <tr>
                <th>@LocalRes.Resource.CodeFile_ItemType</th>
                <th>@LocalRes.Resource.CodeFile_ItemCode</th>
                <th>@LocalRes.Resource.CodeFile_ItemDesc</th>
                <th class="hidden-480">@LocalRes.Resource.CodeFile_Remark</th>
                <th class="hidden-480">@LocalRes.Resource.ModDate</th>
                <th class="hidden-480">@LocalRes.Resource.ModUser</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                foreach (var item in Model.CategoryPageList)
                {
                    <tr>
                        <td>@LocalRes.Resource.ResourceManager.GetString("Category_" + item.ItemType)</td>
                        <td>@item.ItemCode</td>
                        <td>@item.ItemDescription</td>
                        <td class="hidden-480">@item.Remark</td>
                        <td class="hidden-480">@item.ModDate.CultureDateTime()</td>
                        <td class="hidden-480">@item.ModUser</td>
                        <td>
                            <div class="hidden-sm hidden-xs btn-group">
                                <a href="#" id="invokeUpdate" class='btn btn-sm btn-info btnEdit' data-toggle="modal" data-target="#updModal" data-id="@item.ID" data-itemtype="@item.ItemType" data-itemcode="@item.ItemCode" data-itemdescription="@item.ItemDescription" data-itemremark="@item.Remark" data-parent="@(item.ParentCodeFile.HasValue?item.ParentCodeFile.Value.ToString():"")" data-parenttype="@(item.ParentCodeFile.HasValue?item.Parent.ItemType:"")">
                                    <i class="fa fa-edit fa-lg"></i>@LocalRes.Resource.Comm_Edit
                                </a>
                                @*@if (_Update)
                                    {
                                        <a href="#" id="invokeUpdate" class='btn btn-sm btn-info' data-toggle="modal" data-target="#updModal" data-id="@item.ID" data-itemtype="@item.ItemType" data-itemcode="@item.ItemCode" data-itemdescription="@item.ItemDescription" data-itemremark="@item.Remark" data-parent="@(item.ParentCodeFile.HasValue?item.ParentCodeFile.Value.ToString():"")" data-parenttype="@(item.ParentCodeFile.HasValue?item.Parent.ItemType:"")">
                                            <i class="fa fa-edit fa-lg"></i>@LocalRes.Resource.Comm_Edit
                                        </a>
                                    }*@
                                <a href="#" class="btn btn-sm btn-danger btnDelete" data-id="@item.ID">
                                    <i class="fa fa-trash-o fa-lg"></i>@LocalRes.Resource.Comm_Del
                                </a>
                                @*@if (_Delete)
                                    {
                                        <a href="#" class="btn btn-sm btn-danger" onclick="doDel('@(item.ID.ToString())')">
                                            <i class="fa fa-trash-o fa-lg"></i>@LocalRes.Resource.Comm_Del
                                        </a>
                                    }*@
                            </div>
                            <div class="hidden-md hidden-lg">
                                <div class="inline position-relative">
                                    <button class="btn btn-minier btn-primary dropdown-toggle" data-toggle="dropdown" data-position="auto">
                                        <i class="ace-icon fa fa-cog icon-only bigger-110"></i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-only-icon dropdown-yellow dropdown-menu-right dropdown-caret dropdown-close">
                                        <li>
                                            <a href="#" class="tooltip-success btnEdit" data-rel="tooltip" title="" data-original-title="Edit">
                                                <span class="green">
                                                    <i class="ace-icon fa fa-pencil-square-o bigger-120"></i>
                                                </span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="#" class="tooltip-error btnDelete" data-rel="tooltip" title="" data-id="@item.ID" data-original-title="Delete">
                                                <span class="red">
                                                    <i class="ace-icon fa fa-trash-o bigger-120"></i>
                                                </span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
@section Pager{
    @if (Model != null)
    {
        <div class="pager">
            @Html.PagedListPager(
           Model.CategoryPageList,
            page => Url.Action("Index", new {
            itemType = Model.ItemType,
            keyword = Model.Keyword,
            page = page }))
        </div>
    }
}
@section Javascript{
    <script type="text/javascript">
    $(document).ready(function () {
        const UpdateParentDrp = function (parentType, drp, selected) {
            const url = "@Url.Action("GetListByItemType")?typeCode=" + parentType;
            $.get(url, function (data) {
                drp.empty();
                $.each($.parseJSON(data), function (k, v) {
                    var option = $('<option>', {
                        value: v.Value,
                        text: v.Text
                    });
                    if (v.Value == selected)
                        option.attr("selected", "selected");
                    drp.append(option);
                });
            });
        };
        $("#btnCreateModal").click(function () {
            $('.addInputs').val('');
            UpdateParentDrp($("#add_parentType option:selected").val(), $("#add_parentId"),0);
        });
        $("#add_parentType").change(function () {
            UpdateParentDrp($("#add_parentType option:selected").val(), $("#add_parentId"),0);
        });
        $("#upd_parentType").change(function () {
            UpdateParentDrp($("#upd_parentType option:selected").val(), $("#upd_parentId"),0);
        });
        $("#btnCreate").click(function () {
            callAjax(
                '@Url.Action("Create")',
                {
                    ParentCodeFile: $("#add_parentId option:selected").val(),
                    itemType: $("#add_itemType").val(),
                    itemCode: $("#add_itemCode").val(),
                    itemDescription: $("#add_itemDesc").val(),
                    Remark: $("#add_itemRemark").val()
                },
                $('#CreateModal').modal('hide')
            )
        });
        $("#btnUpdate").click(function () {
            callAjax(
                '@Url.Action("Update")'
                , {
                    ID: $("#upd_ID").val(),
                    ParentCodeFile: $("#upd_parentId option:selected").val(),
                    itemDescription: $("#upd_itemDesc").val(),
                    Remark: $("#upd_itemRemark").val() }
                ,$('#updModal').modal('hide')
            )
        });
        function callAjax(url, data, modalAction) {
            $.ajax({
                type: "POST", cache: false,
                datatype: "json",
                url: url,
                data: AddAntiForgeryToken(data)
            }).done(function (result) {
                if (result.success) {
                    bootbox.alert("@LocalRes.Resource.MSG_Success", function () {
                        location.href = '@Html.Raw(@Url.Action("Index"
                                      , new {
                                          itemType = Model.ItemType,
                                          keyword = Model.Keyword }))';
                    });
                } else {
                    bootbox.alert(result.message);
                }
                if(modalAction)
                    modalAction;
            }).fail(function (jqXHR, textStatus) {
                alert("@LocalRes.Resource.MSG_Error");
            });
        }

        $(document).on("click", ".btnEdit", function () {
            $("#upd_ID").val($(this).data('id'));
            $("#upd_itemDesc").val($(this).data('itemdescription'));
            $("#upd_itemRemark").val($(this).data('itemremark'));
            $("#upd_parentType").val($(this).data("parenttype"));
            UpdateParentDrp($("#upd_parentType option:selected").val(), $("#upd_parentId"), $(this).data("parent"));
        });

        $(".btnDelete").click(function () {
            const data = { ID: $(this).data('id') };
        bootbox.confirm("@LocalRes.Resource.MSG_Confirm_Delete", function (result) {
            if (result) {
                callAjax(
                    '@Url.Action("Delete")',
                    data
                )
            }
            });
        });

    });
    </script>
}