@model MobileHis.Models.Areas.Drug.ViewModels.DrugViewModel
@using MobileHis.Data
@using Common
<div class="breadcrumbs" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="@Url.Content("~/")">@LocalRes.Resource.Map_Home</a>
            <span class="divider">
                <i class="icon-angle-right arrow-icon"></i>
            </span>
        </li>
        <li>
            <a href="@Url.Content("~/Drug/Drugs")">@LocalRes.Resource.Map_Pharmacy</a>
            <span class="divider">
                <i class="icon-angle-right arrow-icon"></i>
            </span>
        </li>
        <li>
            @LocalRes.Resource.Map_Drug_Drugs
            <span class="divider">
                <i class="icon-angle-right arrow-icon"></i>
            </span>
        </li>
    </ul>

</div>
<div class="page-header">
    @if (Model.GID != null)
    {
        <h1>@LocalRes.Resource.Comm_Edit</h1>
    }
    else
    {
        <h1>@LocalRes.Resource.Comm_Create</h1>
    }
</div><!-- /.page-header -->

<div class="container-fluid">
    <form action="@Url.Action("Update")" method="post" class="form-horizontal" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.GID)
        <h4>@LocalRes.Resource.Drug_Information</h4>
        <div class="form-group">
            @Html.LabelFor(m => m.Title, @LocalRes.Resource.Drug_Item_Name, new { @class = "control-label col-sm-2 col-lg-1" })
            <div class="col-sm-10 col-md-8 col-lg-5">
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Title)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.DrugCode, @LocalRes.Resource.Drug_Code, new { @class = "control-label col-sm-2 col-lg-1" })
            <div class="col-sm-10 col-md-8 col-lg-5">
                @Html.TextBoxFor(m => m.DrugCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.DrugCode)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.OrderCode, @LocalRes.Resource.Drug_Order_Code, new { @class = "control-label col-sm-2 col-lg-1" })
            <div class="col-sm-10 col-md-8 col-lg-5">
                @Html.TextBoxFor(m => m.OrderCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.OrderCode)
            </div>
        </div>

        <h4>@LocalRes.Resource.Comm_Appearance</h4>
        <div class="container-fluid">
            <div class="col-sm-4 col-md-3 col-lg-2 thumbnail-editor">
                <div class="container-fluid">
                    <img class="img-responsive img-thumbnail" data-role="preview" src="@Url.Action("Photo", "Item", new {area="Settings", id=Model.GID })" />
                </div>
                <div class="container-fluid text-center" style="padding-top: 5px;">
                    <input type="file" class="hidden" name="@Html.NameFor(m => m.Photo)" data-role="file" accept="image/*" />
                    <span class="btn btn-sm btn-info" data-role="change-btn">
                        <i class="fa fa-refresh"></i> @LocalRes.Resource.Comm_Change
                    </span>
                </div>
            </div>
            <div class="col-sm-8 col-md-9 col-lg-10">
                <div class="form-group">
                    @Html.LabelFor(m => m.DrugType, LocalRes.Resource.Comm_Type, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @*@DropDownHelper.FromCodeFileText("DrugType", Model.DrugType)*@
                        @DropDownHelper.getDrugTypeDll("DrugType")
                    </div>
                </div>
                <div class="form-group all-options choose-">
                    @Html.LabelFor(m => m.SubCategory, LocalRes.Resource.Drug_SubCategory, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @DropDownHelper.FromCodeFileValue("SubCategory", Convert.ToString(Model.SubCategory), "DC", true, false)
                    </div>
                </div>
                <div class="form-group all-options choose-">
                    @Html.LabelFor(m => m.Unit, LocalRes.Resource.Drug_Unit, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @DropDownHelper.FromCodeFileValue("Unit", Convert.ToString(Model.Unit), "UT", true, false)
                    </div>
                </div>
                <div class="form-group all-options choose-">
                    @Html.LabelFor(m => m.Formulation, LocalRes.Resource.Drug_Formulation, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @DropDownHelper.FromCodeFileValue("Formulation", Convert.ToString(Model.Formulation), "DF", true, false)
                    </div>
                </div>
                <div class="form-group all-options choose-">
                    @Html.LabelFor(m => m.MajorType, @LocalRes.Resource.Category_TP, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @DropDownHelper.FromCodeFileValue("MajorType", Model.MajorType, "TP", false, false)
                        @Html.ValidationMessageFor(m => m.MajorType)
                    </div>
                </div>
                <div class="form-group all-options choose-">
                    @Html.LabelFor(m => m.Shape, @LocalRes.Resource.Category_SP, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @DropDownHelper.FromCodeFileValue("Shape", Model.Shape, "SP", true, false)
                    </div>
                </div>
                <div class="form-group all-options choose-">
                    @Html.LabelFor(m => m.Color, @LocalRes.Resource.Category_CO, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @DropDownHelper.FromCodeFileValue("Color", Model.Color, "CO", true, false)
                    </div>
                </div>

                <div class="form-group all-options choose- choose-Exam choose-Laboratory">
                    @Html.LabelFor(m => m.Color, @LocalRes.Resource.Drug_Price, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @Html.TextBoxFor(m => m.Price, new { type = "number", step = "0.01", @value = "0.01" })
                        @Html.ValidationMessageFor(m => m.Price)
                    </div>
                </div>
                <div class="form-group all-options choose-">
                    @Html.LabelFor(m => m.Color, @LocalRes.Resource.Drug_Alert, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @Html.CheckBoxFor(m => m.IsHighRisk)
                    </div>
                </div>
                <div class="form-group all-options choose-">
                    @Html.LabelFor(m => m.Color, @LocalRes.Resource.Drug_Child, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @Html.CheckBoxFor(m => m.IsPediatrics)
                    </div>
                </div>

                @*病人來源*@
                <div class="form-group all-options choose-Default">
                    @Html.LabelFor(m => m.Color, @LocalRes.Resource.Drug_Patient_From, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @*@ucDropDown.getEnumDropdown("PatientFrom", typeof(MobileHis.Data.PatientFrom), Model.PatientFrom)*@
                        @Html.DropDownListFor(
                            m => m.PatientFrom, 
                            EnumHelper.GetSelectList(
                                typeof(MobileHis.Data.PatientFrom)
                                )
                        )
                    </div>
                </div>
                <div class="form-group all-options choose-Default">
                    @Html.LabelFor(m => m.Color, @LocalRes.Resource.Drug_Initial_Fee, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @Html.TextBoxFor(m => m.InitialFee, new { type = "number", step = "0.01", @value = "0.01" })
                        @Html.ValidationMessageFor(m => m.InitialFee)
                    </div>
                </div>
                <div class="form-group all-options choose-Default">
                    @Html.LabelFor(m => m.Color, @LocalRes.Resource.Drug_Daily_Fee, new { @class = "control-label col-sm-3 col-lg-2" })
                    <div class="col-sm-9 col-md-8 col-lg-5">
                        @Html.TextBoxFor(m => m.DailyFee, new { type = "number", step = "0.01", @value = "0.01" })
                        @Html.ValidationMessageFor(m => m.DailyFee)
                    </div>
                </div>

            </div>
        </div>

        <hr />
        <div class="nav">
            <div class="nav navbar-right">
                <button class="btn btn-primary">@LocalRes.Resource.Comm_Save</button>
                <button class="btn btn-danger" onclick="history.go(-1); return false"><i class="ace-icon fa fa-undo bigger-110"></i>@LocalRes.Resource.Create_Return_btn</button>
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    $.fn.thumbnail_editor = function () {
        var _this = this;

        $("[data-role=change-btn]", this).click(function () {
            $("[data-role=file]").click();
        });

        $("[data-role=file]").change(function () {
            var reader = new FileReader();
            if (this.files.length == 0) return;

            reader.onload = function () {
                $("[data-role=preview]", _this).attr("src", reader.result);
            };
            reader.readAsDataURL(this.files[0]);
        });
    }

    $(function () {
        $(".thumbnail-editor").thumbnail_editor();
        $("#DrugType").change(function () {
            var tpVal = $("#DrugType").val();
            $(".all-options").hide();//先將全部欄位都隱藏，再依照要顯示的欄位出現給使用者
            $(".choose-" + tpVal).show();//再依照選項的內容出現應該顯示的欄位
        });
        $("#DrugType").trigger('change');
    });
</script>